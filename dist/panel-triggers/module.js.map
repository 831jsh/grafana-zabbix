{"version":3,"sources":["../../src/panel-triggers/module.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","loadPluginCss","PanelCtrl","triggerPanelOptionsTab","triggerPanelTriggersTab","migratePanelSchema","dark","light","ZABBIX_DS_ID","DEFAULT_TARGET","group","host","application","defaultSeverity","priority","severity","color","show","DEFAULT_TIME_FORMAT","panelDefaults","schemaVersion","datasources","targets","hostField","statusField","severityField","lastChangeField","ageField","infoField","hideHostsInMaintenance","showTriggers","sortTriggersBy","text","value","showEvents","limit","fontSize","pageSize","scroll","customLastChangeFormat","lastChangeFormat","triggerSeverity","okEventColor","ackEventColor","triggerStatusMap","TriggerPanelCtrl","$scope","$injector","$element","datasourceSrv","templateSrv","contextSrv","dashboardSrv","editorTabIndex","defaultTimeFormat","pageIndex","triggerList","currentTriggersPage","defaults","panel","cloneDeep","available_datasources","map","getZabbixDataSources","length","push","isEmpty","initDatasources","events","on","onInitEditMode","bind","onRefresh","promises","ds","get","then","datasource","Promise","all","getMetricSources","meta","id","addEditorTab","timing","queryStart","Date","getTime","queryEnd","otherPanelInFullscreenMode","error","loading","setTimeQueryStart","getTriggers","setTimeQueryEnd","slice","getCurrentTriggersPage","render","catch","err","cancelled","console","log","message","data","emit","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","getAcknowledges","flatten","results","sortTriggers","formatTrigger","eventids","lastEvent","eventid","each","event","find","acknowledges","timestamp","unix","ack","clock","time","format","user","alias","name","surname","markAckEvents","sortBy","reverse","triggerObj","lastchangeUnix","Number","lastchange","age","fromNow","hosts","hostTechName","showComment","grafana_user","ack_message","zabbixAPI","acknowledgeEvent","startPos","endPos","Math","min","scope","elem","attrs","ctrl","pageCount","getTableHeight","panelHeight","height","switchPage","e","el","currentTarget","parseInt","$apply","renderPanel","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","css","addClass","renderingCompleted","unbindDestroy","$on","off","renderData","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/**\n * Grafana-Zabbix\n * Zabbix plugin for Grafana.\n * http://github.com/alexanderzobnin/grafana-zabbix\n *\n * Trigger panel.\n * This feature sponsored by CORE IT\n * http://www.coreit.fr\n *\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\n * Licensed under the Apache License, Version 2.0\n */\n\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport {loadPluginCss} from 'app/plugins/sdk';\nimport * as utils from '../datasource-zabbix/utils';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {triggerPanelOptionsTab} from './options_tab';\nimport {triggerPanelTriggersTab} from './triggers_tab';\nimport {migratePanelSchema} from './migrations';\nimport './ack-tooltip.directive';\n\nloadPluginCss({\n  dark: 'plugins/alexanderzobnin-zabbix-app/css/grafana-zabbix.dark.css',\n  light: 'plugins/alexanderzobnin-zabbix-app/css/grafana-zabbix.light.css'\n});\n\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\n\nexport const DEFAULT_TARGET = {\n  group: {filter: \"\"},\n  host: {filter: \"\"},\n  application: {filter: \"\"},\n  trigger: {filter: \"\"}\n};\n\nconst defaultSeverity = [\n  { priority: 0, severity: 'Not classified',  color: '#B7DBAB', show: true },\n  { priority: 1, severity: 'Information',     color: '#82B5D8', show: true },\n  { priority: 2, severity: 'Warning',         color: '#E5AC0E', show: true },\n  { priority: 3, severity: 'Average',         color: '#C15C17', show: true },\n  { priority: 4, severity: 'High',            color: '#BF1B00', show: true },\n  { priority: 5, severity: 'Disaster',        color: '#890F02', show: true }\n];\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nconst panelDefaults = {\n  schemaVersion: 2,\n  datasources: [],\n  targets: {},\n  // Fields\n  hostField: true,\n  statusField: false,\n  severityField: false,\n  lastChangeField: true,\n  ageField: true,\n  infoField: true,\n  // Options\n  hideHostsInMaintenance: false,\n  showTriggers: 'all triggers',\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\n  showEvents: { text: 'Problems', value: '1' },\n  limit: 10,\n  // View options\n  fontSize: '100%',\n  pageSize: 10,\n  scroll: true,\n  customLastChangeFormat: false,\n  lastChangeFormat: \"\",\n  // Triggers severity and colors\n  triggerSeverity: defaultSeverity,\n  okEventColor: 'rgba(0, 245, 153, 0.45)',\n  ackEventColor: 'rgba(0, 0, 0, 0)'\n};\n\nconst triggerStatusMap = {\n  '0': 'OK',\n  '1': 'Problem'\n};\n\nclass TriggerPanelCtrl extends PanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $element, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\n    super($scope, $injector);\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n\n    this.editorTabIndex = 1;\n    this.triggerStatusMap = triggerStatusMap;\n    this.defaultTimeFormat = DEFAULT_TIME_FORMAT;\n    this.pageIndex = 0;\n    this.triggerList = [];\n    this.currentTriggersPage = [];\n    this.datasources = {};\n\n    _.defaults(this.panel, _.cloneDeep(panelDefaults));\n    this.panel = migratePanelSchema(this.panel);\n\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\n    if (this.panel.datasources.length === 0) {\n      this.panel.datasources.push(this.available_datasources[0]);\n    }\n    if (_.isEmpty(this.panel.targets)) {\n      this.panel.targets[this.panel.datasources[0]] = DEFAULT_TARGET;\n    }\n\n    this.initDatasources();\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  initDatasources() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      // Load datasource\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.datasources[ds] = datasource;\n        return datasource;\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getZabbixDataSources() {\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 1);\n    this.addEditorTab('Options', triggerPanelOptionsTab, 2);\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = new Date().getTime();\n  }\n\n  onRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n    this.setTimeQueryStart();\n\n    return this.getTriggers()\n    .then(triggerList => {\n      // Notify panel that request is finished\n      this.loading = false;\n      this.setTimeQueryEnd();\n\n      // Limit triggers number\n      this.triggerList = triggerList.slice(0, this.panel.limit);\n      this.getCurrentTriggersPage();\n      this.render(this.triggerList);\n    })\n    .catch(err => {\n      // if cancelled  keep loading set to true\n      if (err.cancelled) {\n        console.log('Panel request cancelled', err);\n        return;\n      }\n\n      this.loading = false;\n      this.error = err.message || \"Request Error\";\n\n      if (err.data) {\n        if (err.data.message) {\n          this.error = err.data.message;\n        }\n        if (err.data.error) {\n          this.error = err.data.error;\n        }\n      }\n\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  getTriggers() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        var zabbix = datasource.zabbix;\n        var showEvents = this.panel.showEvents.value;\n        var triggerFilter = this.panel.targets[ds];\n        var hideHostsInMaintenance = this.panel.hideHostsInMaintenance;\n\n        // Replace template variables\n        var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\n        var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\n        var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\n\n        let triggersOptions = {\n          showTriggers: showEvents,\n          hideHostsInMaintenance: hideHostsInMaintenance\n        };\n\n        return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\n      }).then((triggers) => {\n        return this.getAcknowledges(triggers, ds);\n      }).then((triggers) => {\n        return this.filterTriggers(triggers, ds);\n      });\n    });\n\n    return Promise.all(promises)\n    .then(results => _.flatten(results))\n    .then((triggers) => {\n      return this.sortTriggers(triggers);\n    })\n    .then(triggers => {\n      return _.map(triggers, this.formatTrigger.bind(this));\n    });\n  }\n\n  getAcknowledges(triggerList, ds) {\n    // Request acknowledges for trigger\n    var eventids = _.map(triggerList, trigger => {\n      return trigger.lastEvent.eventid;\n    });\n\n    return this.datasources[ds].zabbix.getAcknowledges(eventids)\n    .then(events => {\n\n      // Map events to triggers\n      _.each(triggerList, trigger => {\n        var event = _.find(events, event => {\n          return event.eventid === trigger.lastEvent.eventid;\n        });\n\n        if (event) {\n          trigger.acknowledges = _.map(event.acknowledges, ack => {\n            let timestamp = moment.unix(ack.clock);\n            if (this.panel.customLastChangeFormat) {\n              ack.time = timestamp.format(this.panel.lastChangeFormat);\n            } else {\n              ack.time = timestamp.format(this.defaultTimeFormat);\n            }\n            ack.user = ack.alias + ' (' + ack.name + ' ' + ack.surname + ')';\n            return ack;\n          });\n\n          // Mark acknowledged triggers with different color\n          if (this.panel.markAckEvents && trigger.acknowledges.length) {\n            trigger.color = this.panel.ackEventColor;\n          }\n        }\n      });\n\n      return triggerList;\n    });\n  }\n\n  filterTriggers(triggerList, ds) {\n    // Filter triggers by description\n    var triggerFilter = this.panel.targets[ds].trigger.filter;\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\n    if (triggerFilter) {\n      triggerList = filterTriggers(triggerList, triggerFilter);\n    }\n\n    // Filter acknowledged triggers\n    if (this.panel.showTriggers === 'unacknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return !trigger.acknowledges;\n      });\n    } else if (this.panel.showTriggers === 'acknowledged') {\n      triggerList = _.filter(triggerList, 'acknowledges');\n    } else {\n      triggerList = triggerList;\n    }\n\n    // Filter triggers by severity\n    triggerList = _.filter(triggerList, trigger => {\n      return this.panel.triggerSeverity[trigger.priority].show;\n    });\n\n    return triggerList;\n  }\n\n  sortTriggers(triggerList) {\n    if (this.panel.sortTriggersBy.value === 'priority') {\n      triggerList = _.sortBy(triggerList, 'priority').reverse();\n    } else {\n      triggerList = _.sortBy(triggerList, 'lastchangeUnix').reverse();\n    }\n    return triggerList;\n  }\n\n  formatTrigger(trigger) {\n    let triggerObj = trigger;\n\n    // Format last change and age\n    trigger.lastchangeUnix = Number(trigger.lastchange);\n    let timestamp = moment.unix(trigger.lastchangeUnix);\n    if (this.panel.customLastChangeFormat) {\n      // User defined format\n      triggerObj.lastchange = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      triggerObj.lastchange = timestamp.format(this.defaultTimeFormat);\n    }\n    triggerObj.age = timestamp.fromNow(true);\n\n    // Set host that the trigger belongs\n    if (trigger.hosts.length) {\n      triggerObj.host = trigger.hosts[0].name;\n      triggerObj.hostTechName = trigger.hosts[0].host;\n    }\n\n    // Set color\n    if (trigger.value === '1') {\n      // Problem state\n      triggerObj.color = this.panel.triggerSeverity[trigger.priority].color;\n    } else {\n      // OK state\n      triggerObj.color = this.panel.okEventColor;\n    }\n\n    triggerObj.severity = this.panel.triggerSeverity[trigger.priority].severity;\n    return triggerObj;\n  }\n\n  switchComment(trigger) {\n    trigger.showComment = !trigger.showComment;\n  }\n\n  acknowledgeTrigger(trigger, message) {\n    let eventid = trigger.lastEvent.eventid;\n    let grafana_user = this.contextSrv.user.name;\n    let ack_message = grafana_user + ' (Grafana): ' + message;\n    return this.datasourceSrv.get(this.panel.datasource)\n    .then(datasource => {\n      let zabbixAPI = datasource.zabbix.zabbixAPI;\n      return zabbixAPI.acknowledgeEvent(eventid, ack_message);\n    })\n    .then(this.onRefresh.bind(this));\n  }\n\n  getCurrentTriggersPage() {\n    let pageSize = this.panel.pageSize || 10;\n    let startPos = this.pageIndex * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\n    return this.currentTriggersPage;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    var pageCount = 0;\n    data = ctrl.triggerList;\n\n    function getTableHeight() {\n      var panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return (panelHeight - 31) + 'px';\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10)-1);\n\n      let pageSize = ctrl.panel.pageSize || 10;\n      let startPos = ctrl.pageIndex * pageSize;\n      let endPos = Math.min(startPos + pageSize, ctrl.triggerList.length);\n      ctrl.currentTriggersPage = ctrl.triggerList.slice(startPos, endPos);\n\n      scope.$apply(() => {\n        renderPanel();\n      });\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      var pageSize = ctrl.panel.pageSize || 5;\n      pageCount = Math.ceil(data.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      var startPage = Math.max(ctrl.pageIndex - 3, 0);\n      var endPage = Math.min(pageCount, startPage + 9);\n\n      var paginationList = $('<ul></ul>');\n\n      for (var i = startPage; i < endPage; i++) {\n        var activeClass = i === ctrl.pageIndex ? 'active' : '';\n        var pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i+1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      var panelElem = elem.parents('.panel');\n      var rootElem = elem.find('.triggers-panel-scroll');\n      var footerElem = elem.find('.triggers-panel-footer');\n\n      elem.css({'font-size': panel.fontSize});\n      panelElem.addClass('triggers-panel-wrapper');\n      appendPaginationControls(footerElem);\n\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : '' });\n      ctrl.renderingCompleted();\n    }\n\n    elem.on('click', '.triggers-panel-page-link', switchPage);\n\n    var unbindDestroy = scope.$on('$destroy', function() {\n      elem.off('click', '.triggers-panel-page-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', (renderData) => {\n      data = renderData || data;\n      if (data) {\n        scope.$apply(() => {\n          renderPanel();\n        });\n      }\n    });\n  }\n}\n\nTriggerPanelCtrl.templateUrl = 'panel-triggers/module.html';\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, function(trigger) {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, function(trigger) {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n\nexport {\n  TriggerPanelCtrl,\n  TriggerPanelCtrl as PanelCtrl\n};\n"]}