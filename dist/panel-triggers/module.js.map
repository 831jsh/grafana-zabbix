{"version":3,"sources":["../../src/panel-triggers/module.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","loadPluginCss","PanelCtrl","triggerPanelOptionsTab","triggerPanelTriggersTab","dark","light","defaultSeverity","priority","severity","color","show","panelDefaults","datasources","group","host","application","targets","hostField","statusField","severityField","lastChangeField","ageField","infoField","limit","showTriggers","hideHostsInMaintenance","sortTriggersBy","text","value","showEvents","triggerSeverity","okEventColor","ackEventColor","scroll","pageSize","fontSize","schemaVersion","triggerStatusMap","defaultTimeFormat","TriggerPanelCtrl","$scope","$injector","$element","datasourceSrv","templateSrv","contextSrv","dashboardSrv","pageIndex","triggerList","currentTriggersPage","migratePanelConfig","defaults","panel","cloneDeep","initDatasources","events","on","onInitEditMode","bind","onRefresh","each","ds","get","then","datasource","queryBuilder","addEditorTab","otherPanelInFullscreenMode","error","loading","refreshData","slice","getCurrentTriggersPage","render","getTriggers","length","isEmpty","promises","map","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","getAcknowledges","Promise","all","flatten","results","formatTrigger","eventids","lastEvent","eventid","event","find","acknowledges","timestamp","unix","ack","clock","customLastChangeFormat","time","format","lastChangeFormat","user","alias","name","surname","markAckEvents","sortBy","reverse","triggerObj","lastchangeUnix","Number","lastchange","age","fromNow","hosts","hostTechName","showComment","message","grafana_user","ack_message","zabbixAPI","acknowledgeEvent","startPos","endPos","Math","min","scope","elem","attrs","ctrl","data","pageCount","getTableHeight","panelHeight","height","switchPage","e","el","currentTarget","parseInt","$apply","renderPanel","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","css","addClass","unbindDestroy","$on","off","renderData","renderingCompleted","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/**\n * Grafana-Zabbix\n * Zabbix plugin for Grafana.\n * http://github.com/alexanderzobnin/grafana-zabbix\n *\n * Trigger panel.\n * This feature sponsored by CORE IT\n * http://www.coreit.fr\n *\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\n * Licensed under the Apache License, Version 2.0\n */\n\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport {loadPluginCss} from 'app/plugins/sdk';\nimport * as utils from '../datasource-zabbix/utils';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {triggerPanelOptionsTab} from './options_tab';\nimport {triggerPanelTriggersTab} from './triggers_tab';\nimport './ack-tooltip.directive';\n\nloadPluginCss({\n  dark: 'plugins/alexanderzobnin-zabbix-app/css/grafana-zabbix.dark.css',\n  light: 'plugins/alexanderzobnin-zabbix-app/css/grafana-zabbix.light.css'\n});\n\nvar defaultSeverity = [\n  { priority: 0, severity: 'Not classified',  color: '#B7DBAB', show: true },\n  { priority: 1, severity: 'Information',     color: '#82B5D8', show: true },\n  { priority: 2, severity: 'Warning',         color: '#E5AC0E', show: true },\n  { priority: 3, severity: 'Average',         color: '#C15C17', show: true },\n  { priority: 4, severity: 'High',            color: '#BF1B00', show: true },\n  { priority: 5, severity: 'Disaster',        color: '#890F02', show: true }\n];\n\nvar panelDefaults = {\n  datasources: [],\n  triggers: {\n    group: {filter: \"\"},\n    host: {filter: \"\"},\n    application: {filter: \"\"},\n    trigger: {filter: \"\"}\n  },\n  targets: {},\n  hostField: true,\n  statusField: false,\n  severityField: false,\n  lastChangeField: true,\n  ageField: true,\n  infoField: true,\n  limit: 10,\n  showTriggers: 'all triggers',\n  hideHostsInMaintenance: false,\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\n  showEvents: { text: 'Problems', value: '1' },\n  triggerSeverity: defaultSeverity,\n  okEventColor: 'rgba(0, 245, 153, 0.45)',\n  ackEventColor: 'rgba(0, 0, 0, 0)',\n  scroll: true,\n  pageSize: 10,\n  fontSize: '100%',\n  schemaVersion: 2\n};\n\nvar triggerStatusMap = {\n  '0': 'OK',\n  '1': 'Problem'\n};\n\nvar defaultTimeFormat = \"DD MMM YYYY HH:mm:ss\";\n\nclass TriggerPanelCtrl extends PanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $element, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\n    super($scope, $injector);\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n\n    this.triggerStatusMap = triggerStatusMap;\n    this.defaultTimeFormat = defaultTimeFormat;\n    this.pageIndex = 0;\n    this.triggerList = [];\n    this.currentTriggersPage = [];\n    this.datasources = {};\n\n    this.migratePanelConfig();\n\n    // Load panel defaults\n    // _.cloneDeep() need for prevent changing shared defaultSeverity.\n    // Load object \"by value\" istead \"by reference\".\n    _.defaults(this.panel, _.cloneDeep(panelDefaults));\n\n    this.initDatasources();\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  initDatasources() {\n    _.each(this.panel.datasources, (ds) => {\n      // Load datasource\n      this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.datasources[ds] = datasource;\n        this.datasources[ds].queryBuilder = datasource.queryBuilder;\n      });\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 2);\n    this.addEditorTab('Options', triggerPanelOptionsTab, 3);\n  }\n\n  onRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    return this.refreshData()\n    .then(triggerList => {\n      // Limit triggers number\n      this.triggerList  = triggerList.slice(0, this.panel.limit);\n\n      this.getCurrentTriggersPage();\n\n      // Notify panel that request is finished\n      this.loading = false;\n\n      this.render(this.triggerList);\n    });\n  }\n\n  refreshData() {\n    return this.getTriggers();\n  }\n\n  migratePanelConfig() {\n    if (!this.panel.datasources || (this.panel.datasource && !this.panel.datasources.length)) {\n      this.panel.datasources = [this.panel.datasource];\n      this.panel.targets[this.panel.datasource] = this.panel.triggers;\n    } else if (_.isEmpty(this.panel.targets)) {\n      this.panel.targets[this.panel.datasources[0]] = this.panel.triggers;\n    }\n  }\n\n  getTriggers() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        var zabbix = datasource.zabbix;\n        this.zabbix = zabbix;\n        this.datasource = datasource;\n        var showEvents = this.panel.showEvents.value;\n        var triggerFilter = this.panel.targets[ds];\n        var hideHostsInMaintenance = this.panel.hideHostsInMaintenance;\n\n        // Replace template variables\n        var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\n        var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\n        var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\n\n        let triggersOptions = {\n          showTriggers: showEvents,\n          hideHostsInMaintenance: hideHostsInMaintenance\n        };\n\n        return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\n      }).then((triggers) => {\n        return this.getAcknowledges(triggers, ds);\n      }).then((triggers) => {\n        return this.filterTriggers(triggers, ds);\n      });\n    });\n\n    return Promise.all(promises)\n    .then(results => _.flatten(results))\n    .then(triggers => {\n      return _.map(triggers, this.formatTrigger.bind(this));\n    });\n  }\n\n  getAcknowledges(triggerList, ds) {\n    // Request acknowledges for trigger\n    var eventids = _.map(triggerList, trigger => {\n      return trigger.lastEvent.eventid;\n    });\n\n    return this.datasources[ds].zabbix.getAcknowledges(eventids)\n    .then(events => {\n\n      // Map events to triggers\n      _.each(triggerList, trigger => {\n        var event = _.find(events, event => {\n          return event.eventid === trigger.lastEvent.eventid;\n        });\n\n        if (event) {\n          trigger.acknowledges = _.map(event.acknowledges, ack => {\n            let timestamp = moment.unix(ack.clock);\n            if (this.panel.customLastChangeFormat) {\n              ack.time = timestamp.format(this.panel.lastChangeFormat);\n            } else {\n              ack.time = timestamp.format(this.defaultTimeFormat);\n            }\n            ack.user = ack.alias + ' (' + ack.name + ' ' + ack.surname + ')';\n            return ack;\n          });\n\n          // Mark acknowledged triggers with different color\n          if (this.panel.markAckEvents && trigger.acknowledges.length) {\n            trigger.color = this.panel.ackEventColor;\n          }\n        }\n      });\n\n      return triggerList;\n    });\n  }\n\n  filterTriggers(triggerList, ds) {\n    // Filter triggers by description\n    var triggerFilter = this.panel.targets[ds].trigger.filter;\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\n    if (triggerFilter) {\n      triggerList = filterTriggers(triggerList, triggerFilter);\n    }\n\n    // Filter acknowledged triggers\n    if (this.panel.showTriggers === 'unacknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return !trigger.acknowledges;\n      });\n    } else if (this.panel.showTriggers === 'acknowledged') {\n      triggerList = _.filter(triggerList, 'acknowledges');\n    } else {\n      triggerList = triggerList;\n    }\n\n    // Filter triggers by severity\n    triggerList = _.filter(triggerList, trigger => {\n      return this.panel.triggerSeverity[trigger.priority].show;\n    });\n\n    // Sort triggers\n    if (this.panel.sortTriggersBy.value === 'priority') {\n      triggerList = _.sortBy(triggerList, 'priority').reverse();\n    } else {\n      triggerList = _.sortBy(triggerList, 'lastchangeUnix').reverse();\n    }\n\n    return triggerList;\n  }\n\n  formatTrigger(trigger) {\n    let triggerObj = trigger;\n\n    // Format last change and age\n    trigger.lastchangeUnix = Number(trigger.lastchange);\n    let timestamp = moment.unix(trigger.lastchangeUnix);\n    if (this.panel.customLastChangeFormat) {\n      // User defined format\n      triggerObj.lastchange = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      triggerObj.lastchange = timestamp.format(this.defaultTimeFormat);\n    }\n    triggerObj.age = timestamp.fromNow(true);\n\n    // Set host that the trigger belongs\n    if (trigger.hosts.length) {\n      triggerObj.host = trigger.hosts[0].name;\n      triggerObj.hostTechName = trigger.hosts[0].host;\n    }\n\n    // Set color\n    if (trigger.value === '1') {\n      // Problem state\n      triggerObj.color = this.panel.triggerSeverity[trigger.priority].color;\n    } else {\n      // OK state\n      triggerObj.color = this.panel.okEventColor;\n    }\n\n    triggerObj.severity = this.panel.triggerSeverity[trigger.priority].severity;\n    return triggerObj;\n  }\n\n  switchComment(trigger) {\n    trigger.showComment = !trigger.showComment;\n  }\n\n  acknowledgeTrigger(trigger, message) {\n    let eventid = trigger.lastEvent.eventid;\n    let grafana_user = this.contextSrv.user.name;\n    let ack_message = grafana_user + ' (Grafana): ' + message;\n    return this.datasourceSrv.get(this.panel.datasource)\n    .then(datasource => {\n      let zabbixAPI = datasource.zabbix.zabbixAPI;\n      return zabbixAPI.acknowledgeEvent(eventid, ack_message);\n    })\n    .then(this.onRefresh.bind(this));\n  }\n\n  getCurrentTriggersPage() {\n    let pageSize = this.panel.pageSize || 10;\n    let startPos = this.pageIndex * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\n    return this.currentTriggersPage;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    var pageCount = 0;\n    data = ctrl.triggerList;\n\n    function getTableHeight() {\n      var panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return (panelHeight - 31) + 'px';\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10)-1);\n\n      let pageSize = ctrl.panel.pageSize || 10;\n      let startPos = ctrl.pageIndex * pageSize;\n      let endPos = Math.min(startPos + pageSize, ctrl.triggerList.length);\n      ctrl.currentTriggersPage = ctrl.triggerList.slice(startPos, endPos);\n\n      scope.$apply();\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      var pageSize = ctrl.panel.pageSize || 5;\n      pageCount = Math.ceil(data.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      var startPage = Math.max(ctrl.pageIndex - 3, 0);\n      var endPage = Math.min(pageCount, startPage + 9);\n\n      var paginationList = $('<ul></ul>');\n\n      for (var i = startPage; i < endPage; i++) {\n        var activeClass = i === ctrl.pageIndex ? 'active' : '';\n        var pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i+1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      var panelElem = elem.parents('.panel');\n      var rootElem = elem.find('.triggers-panel-scroll');\n      var footerElem = elem.find('.triggers-panel-footer');\n\n      elem.css({'font-size': panel.fontSize});\n      panelElem.addClass('triggers-panel-wrapper');\n      appendPaginationControls(footerElem);\n\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : '' });\n    }\n\n    elem.on('click', '.triggers-panel-page-link', switchPage);\n\n    var unbindDestroy = scope.$on('$destroy', function() {\n      elem.off('click', '.triggers-panel-page-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', (renderData) => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nTriggerPanelCtrl.templateUrl = 'panel-triggers/module.html';\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, function(trigger) {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, function(trigger) {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n\nexport {\n  TriggerPanelCtrl,\n  TriggerPanelCtrl as PanelCtrl\n};\n"]}