{"version":3,"sources":["../../src/panel-triggers/triggers_tab.js"],"names":["triggerPanelTriggersTab","restrict","scope","templateUrl","controller","TriggersTabCtrl","_","utils","ZABBIX_DS_ID","DEFAULT_TARGET","group","filter","host","application","trigger","$scope","$rootScope","uiSegmentSrv","datasourceSrv","templateSrv","editor","panelCtrl","ctrl","panel","scopeDefaults","datasources","getGroupNames","getHostNames","getApplicationNames","oldTarget","cloneDeep","targets","defaultsDeep","available_datasources","map","getZabbixDataSources","datasource","initDatasources","refresh","each","ds","get","then","bind","suggestGroups","suggestHosts","suggestApps","getMetricSources","meta","id","value","query","callback","zabbix","getAllGroups","groups","groupFilter","replaceTemplateVars","name","getAllHosts","hosts","hostFilter","getAllApps","apps","parseTarget","newTarget","isEqual","str","isRegex","isTemplateVariable","variables"],"mappings":"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","file":"triggers_tab.js","sourcesContent":["import _ from 'lodash';\nimport * as utils from '../datasource-zabbix/utils';\nimport './datasource-selector.directive';\nimport '../datasource-zabbix/css/query-editor.css!';\n\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\nconst DEFAULT_TARGET = {\n  group: {filter: \"\"},\n  host: {filter: \"\"},\n  application: {filter: \"\"},\n  trigger: {filter: \"\"}\n};\n\nclass TriggersTabCtrl {\n\n  /** @ngInject */\n  constructor($scope, $rootScope, uiSegmentSrv, datasourceSrv, templateSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n\n    // Load scope defaults\n    var scopeDefaults = {\n      datasources: {},\n      getGroupNames: {},\n      getHostNames: {},\n      getApplicationNames: {},\n      oldTarget: _.cloneDeep(this.panel.targets)\n    };\n    _.defaultsDeep(this, scopeDefaults);\n\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\n    if (!this.panel.datasource) {\n      this.panel.datasource = this.available_datasources[0];\n    }\n\n    this.initDatasources();\n    this.panelCtrl.refresh();\n  }\n\n  initDatasources() {\n    _.each(this.panel.datasources, (ds) => {\n      // Load datasource\n      this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.panelCtrl.datasources[ds] = datasource;\n        this.datasources[ds] = datasource;\n\n        // Map functions for bs-typeahead\n        this.getGroupNames[ds] = _.bind(this.suggestGroups, this, datasource);\n        this.getHostNames[ds] = _.bind(this.suggestHosts, this, datasource);\n        this.getApplicationNames[ds] = _.bind(this.suggestApps, this, datasource);\n      });\n    });\n  }\n\n  getZabbixDataSources() {\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\n    });\n  }\n\n  suggestGroups(ds, query, callback) {\n    return ds.zabbix.getAllGroups()\n    .then(groups => {\n      return _.map(groups, 'name');\n    })\n    .then(callback);\n  }\n\n  suggestHosts(ds, query, callback) {\n    let groupFilter = ds.replaceTemplateVars(this.panel.targets[ds.name].group.filter);\n    return ds.zabbix.getAllHosts(groupFilter)\n    .then(hosts => {\n      return _.map(hosts, 'name');\n    })\n    .then(callback);\n  }\n\n  suggestApps(ds, query, callback) {\n    let groupFilter = ds.replaceTemplateVars(this.panel.targets[ds.name].group.filter);\n    let hostFilter = ds.replaceTemplateVars(this.panel.targets[ds.name].host.filter);\n    return ds.zabbix.getAllApps(groupFilter, hostFilter)\n    .then(apps => {\n      return _.map(apps, 'name');\n    })\n    .then(callback);\n  }\n\n  datasourcesChanged() {\n    _.each(this.panel.datasources, (ds) => {\n      if (!this.panel.targets[ds]) {\n        this.panel.targets[ds] = DEFAULT_TARGET;\n      }\n    });\n    this.parseTarget();\n  }\n\n  parseTarget() {\n    this.initDatasources();\n    var newTarget = _.cloneDeep(this.panel.targets);\n    if (!_.isEqual(this.oldTarget, newTarget)) {\n      this.oldTarget = newTarget;\n    }\n    this.panelCtrl.refresh();\n  }\n\n  isRegex(str) {\n    return utils.isRegex(str);\n  }\n\n  isVariable(str) {\n    return utils.isTemplateVariable(str, this.templateSrv.variables);\n  }\n}\n\nexport function triggerPanelTriggersTab() {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/triggers_tab.html',\n    controller: TriggersTabCtrl,\n  };\n}\n"]}