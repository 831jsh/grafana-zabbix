{"version":3,"sources":["../../src/panel-triggers/triggers_panel_ctrl.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","PanelCtrl","triggerPanelOptionsTab","triggerPanelTriggersTab","migratePanelSchema","ZABBIX_DS_ID","DEFAULT_TARGET","group","host","application","DEFAULT_SEVERITY","priority","severity","color","show","blink","DEFAULT_TIME_FORMAT","PANEL_DEFAULTS","schemaVersion","datasources","targets","hostField","hostTechNameField","statusField","severityField","descriptionField","hideHostsInMaintenance","showTriggers","sortTriggersBy","text","value","showEvents","limit","fontSize","pageSize","customLastChangeFormat","lastChangeFormat","triggerSeverity","okEventColor","ackEventColor","triggerStatusMap","TriggerPanelCtrl","$scope","$injector","$timeout","datasourceSrv","templateSrv","contextSrv","dashboardSrv","scope","editorTabIndex","defaultTimeFormat","pageIndex","triggerList","currentTriggersPage","panel","defaultsDeep","cloneDeep","available_datasources","map","getZabbixDataSources","length","push","isEmpty","initDatasources","events","on","onInitEditMode","bind","onRefresh","promises","ds","get","then","datasource","Promise","all","getMetricSources","meta","id","addEditorTab","timing","queryStart","Date","getTime","queryEnd","otherPanelInFullscreenMode","error","loading","setTimeQueryStart","getTriggers","setTimeQueryEnd","render","zabbixTriggers","catch","err","cancelled","console","log","message","data","emit","formatTrigger","updateTriggerFormat","sortTriggers","slice","getCurrentTriggersPage","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","getAcknowledges","addTriggerDataSource","flatten","results","eventids","lastEvent","eventid","each","event","find","acknowledges","timestamp","unix","ack","clock","time","format","user","alias","name","surname","orderBy","zabbixTrigger","triggerObj","hosts","hostTechName","lastchangeUnix","Number","lastchange","setTriggerLastChange","setTriggerSeverity","markAckEvents","age","fromNow","showComment","grafana_user","ack_message","zabbixAPI","acknowledgeEvent","reject","startPos","endPos","Math","min","triggerValue","iconClass","elem","attrs","ctrl","pageCount","$watchGroup","renderPanel","switchPage","renderData","getContentHeight","panelHeight","height","e","el","currentTarget","parseInt","$apply","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","setFontSize","triggerCardElem","css","rootElem","renderingCompleted","unbindDestroy","$on","off","templateUrl"],"mappings":"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","file":"triggers_panel_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport * as utils from '../datasource-zabbix/utils';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {triggerPanelOptionsTab} from './options_tab';\nimport {triggerPanelTriggersTab} from './triggers_tab';\nimport {migratePanelSchema} from './migrations';\n\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\n\nexport const DEFAULT_TARGET = {\n  group: {filter: \"\"},\n  host: {filter: \"\"},\n  application: {filter: \"\"},\n  trigger: {filter: \"\"}\n};\n\nexport const DEFAULT_SEVERITY = [\n  { priority: 0, severity: 'Not classified',  color: '#B7DBAB', show: true, blink: false },\n  { priority: 1, severity: 'Information',     color: '#82B5D8', show: true, blink: false },\n  { priority: 2, severity: 'Warning',         color: '#E5AC0E', show: true, blink: false },\n  { priority: 3, severity: 'Average',         color: '#C15C17', show: true, blink: false },\n  { priority: 4, severity: 'High',            color: '#BF1B00', show: true, blink: true },\n  { priority: 5, severity: 'Disaster',        color: '#890F02', show: true, blink: true },\n];\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nexport const PANEL_DEFAULTS = {\n  schemaVersion: 3,\n  datasources: [],\n  targets: {},\n  // Fields\n  hostField: true,\n  hostTechNameField: false,\n  statusField: true,\n  severityField: true,\n  descriptionField: true,\n  // Options\n  hideHostsInMaintenance: false,\n  showTriggers: 'all triggers',\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\n  showEvents: { text: 'Problems', value: '1' },\n  limit: 100,\n  // View options\n  fontSize: '100%',\n  pageSize: 10,\n  customLastChangeFormat: false,\n  lastChangeFormat: \"\",\n  // Triggers severity and colors\n  triggerSeverity: DEFAULT_SEVERITY,\n  okEventColor: 'rgba(0, 245, 153, 0.45)',\n  ackEventColor: 'rgba(0, 0, 0, 0)'\n};\n\nconst triggerStatusMap = {\n  '0': 'OK',\n  '1': 'PROBLEM'\n};\n\nexport class TriggerPanelCtrl extends PanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $timeout, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\n    super($scope, $injector);\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n    this.scope = $scope;\n    this.$timeout = $timeout;\n\n    this.editorTabIndex = 1;\n    this.triggerStatusMap = triggerStatusMap;\n    this.defaultTimeFormat = DEFAULT_TIME_FORMAT;\n    this.pageIndex = 0;\n    this.triggerList = [];\n    this.currentTriggersPage = [];\n    this.datasources = {};\n\n    this.panel = migratePanelSchema(this.panel);\n    _.defaultsDeep(this.panel, _.cloneDeep(PANEL_DEFAULTS));\n\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\n    if (this.panel.datasources.length === 0) {\n      this.panel.datasources.push(this.available_datasources[0]);\n    }\n    if (_.isEmpty(this.panel.targets)) {\n      this.panel.targets[this.panel.datasources[0]] = DEFAULT_TARGET;\n    }\n\n    this.initDatasources();\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  initDatasources() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      // Load datasource\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.datasources[ds] = datasource;\n        return datasource;\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getZabbixDataSources() {\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 1);\n    this.addEditorTab('Options', triggerPanelOptionsTab, 2);\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = new Date().getTime();\n  }\n\n  onRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n    this.setTimeQueryStart();\n    this.pageIndex = 0;\n\n    return this.getTriggers()\n    .then(zabbixTriggers => {\n      // Notify panel that request is finished\n      this.loading = false;\n      this.setTimeQueryEnd();\n\n      this.render(zabbixTriggers);\n    })\n    .catch(err => {\n      // if cancelled  keep loading set to true\n      if (err.cancelled) {\n        console.log('Panel request cancelled', err);\n        return;\n      }\n\n      this.loading = false;\n      this.error = err.message || \"Request Error\";\n\n      if (err.data) {\n        if (err.data.message) {\n          this.error = err.data.message;\n        }\n        if (err.data.error) {\n          this.error = err.data.error;\n        }\n      }\n\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  render(zabbixTriggers) {\n    let triggers = zabbixTriggers || this.triggerList;\n\n    if (zabbixTriggers) {\n      triggers = _.map(triggers, this.formatTrigger.bind(this));\n    } else {\n      triggers = _.map(triggers, this.updateTriggerFormat.bind(this));\n    }\n    triggers = this.sortTriggers(triggers);\n    // Limit triggers number\n    triggers = triggers.slice(0, this.panel.limit);\n    this.triggerList = triggers;\n    this.getCurrentTriggersPage();\n\n    this.$timeout(() => {\n      super.render(this.triggerList);\n    });\n  }\n\n  getTriggers() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        var zabbix = datasource.zabbix;\n        var showEvents = this.panel.showEvents.value;\n        var triggerFilter = this.panel.targets[ds];\n        var hideHostsInMaintenance = this.panel.hideHostsInMaintenance;\n\n        // Replace template variables\n        var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\n        var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\n        var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\n\n        let triggersOptions = {\n          showTriggers: showEvents,\n          hideHostsInMaintenance: hideHostsInMaintenance\n        };\n\n        return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\n      }).then((triggers) => {\n        return this.getAcknowledges(triggers, ds);\n      }).then((triggers) => {\n        return this.filterTriggers(triggers, ds);\n      }).then((triggers) => {\n        return this.addTriggerDataSource(triggers, ds);\n      });\n    });\n\n    return Promise.all(promises)\n    .then(results => _.flatten(results));\n  }\n\n  getAcknowledges(triggerList, ds) {\n    // Request acknowledges for trigger\n    var eventids = _.map(triggerList, trigger => {\n      return trigger.lastEvent.eventid;\n    });\n\n    return this.datasources[ds].zabbix.getAcknowledges(eventids)\n    .then(events => {\n\n      // Map events to triggers\n      _.each(triggerList, trigger => {\n        var event = _.find(events, event => {\n          return event.eventid === trigger.lastEvent.eventid;\n        });\n\n        if (event) {\n          trigger.acknowledges = _.map(event.acknowledges, ack => {\n            let timestamp = moment.unix(ack.clock);\n            if (this.panel.customLastChangeFormat) {\n              ack.time = timestamp.format(this.panel.lastChangeFormat);\n            } else {\n              ack.time = timestamp.format(this.defaultTimeFormat);\n            }\n            ack.user = ack.alias + ' (' + ack.name + ' ' + ack.surname + ')';\n            return ack;\n          });\n        }\n\n        if (!trigger.lastEvent.eventid) {\n          trigger.lastEvent = null;\n        }\n      });\n\n      return triggerList;\n    });\n  }\n\n  filterTriggers(triggerList, ds) {\n    // Filter triggers by description\n    var triggerFilter = this.panel.targets[ds].trigger.filter;\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\n    if (triggerFilter) {\n      triggerList = filterTriggers(triggerList, triggerFilter);\n    }\n\n    // Filter acknowledged triggers\n    if (this.panel.showTriggers === 'unacknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return !trigger.acknowledges;\n      });\n    } else if (this.panel.showTriggers === 'acknowledged') {\n      triggerList = _.filter(triggerList, 'acknowledges');\n    } else {\n      triggerList = triggerList;\n    }\n\n    // Filter triggers by severity\n    triggerList = _.filter(triggerList, trigger => {\n      return this.panel.triggerSeverity[trigger.priority].show;\n    });\n\n    return triggerList;\n  }\n\n  addTriggerDataSource(triggers, ds) {\n    _.each(triggers, (trigger) => {\n      trigger.datasource = ds;\n    });\n    return triggers;\n  }\n\n  sortTriggers(triggerList) {\n    if (this.panel.sortTriggersBy.value === 'priority') {\n      triggerList = _.orderBy(triggerList, ['priority', 'lastchangeUnix', 'triggerid'], ['desc', 'desc', 'desc']);\n    } else {\n      triggerList = _.orderBy(triggerList, ['lastchangeUnix', 'priority', 'triggerid'], ['desc', 'desc', 'desc']);\n    }\n    return triggerList;\n  }\n\n  formatTrigger(zabbixTrigger) {\n    let trigger = _.cloneDeep(zabbixTrigger);\n    let triggerObj = trigger;\n\n    // Set host that the trigger belongs\n    if (trigger.hosts.length) {\n      triggerObj.host = trigger.hosts[0].name;\n      triggerObj.hostTechName = trigger.hosts[0].host;\n    }\n\n    // Format last change and age\n    trigger.lastchangeUnix = Number(trigger.lastchange);\n    triggerObj = this.setTriggerLastChange(triggerObj);\n    triggerObj = this.setTriggerSeverity(triggerObj);\n    return triggerObj;\n  }\n\n  updateTriggerFormat(trigger) {\n    trigger = this.setTriggerLastChange(trigger);\n    trigger = this.setTriggerSeverity(trigger);\n    return trigger;\n  }\n\n  setTriggerSeverity(trigger) {\n    if (trigger.value === '1') {\n      // Problem state\n      trigger.color = this.panel.triggerSeverity[trigger.priority].color;\n    } else {\n      // OK state\n      trigger.color = this.panel.okEventColor;\n    }\n    trigger.severity = this.panel.triggerSeverity[trigger.priority].severity;\n\n    // Mark acknowledged triggers with different color\n    if (this.panel.markAckEvents && trigger.acknowledges && trigger.acknowledges.length) {\n      trigger.color = this.panel.ackEventColor;\n    }\n\n    return trigger;\n  }\n\n  setTriggerLastChange(trigger) {\n    let timestamp = moment.unix(trigger.lastchangeUnix);\n    if (this.panel.customLastChangeFormat) {\n      // User defined format\n      trigger.lastchange = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      trigger.lastchange = timestamp.format(this.defaultTimeFormat);\n    }\n    trigger.age = timestamp.fromNow(true);\n    return trigger;\n  }\n\n  switchComment(trigger) {\n    trigger.showComment = !trigger.showComment;\n  }\n\n  acknowledgeTrigger(trigger, message) {\n    let eventid = trigger.lastEvent ? trigger.lastEvent.eventid : null;\n    let grafana_user = this.contextSrv.user.name;\n    let ack_message = grafana_user + ' (Grafana): ' + message;\n    return this.datasourceSrv.get(trigger.datasource)\n    .then(datasource => {\n      if (eventid) {\n        return datasource.zabbix.zabbixAPI.acknowledgeEvent(eventid, ack_message);\n      } else {\n        return Promise.reject({message: 'Trigger has no events. Nothing to acknowledge.'});\n      }\n    })\n    .then(this.onRefresh.bind(this))\n    .catch((err) => {\n      this.error = err.message || \"Acknowledge Error\";\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  getCurrentTriggersPage() {\n    let pageSize = this.panel.pageSize || 10;\n    let startPos = this.pageIndex * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\n    return this.currentTriggersPage;\n  }\n\n  formatHostName(trigger) {\n    if (this.panel.hostField && this.panel.hostTechNameField) {\n      return `${trigger.host} (${trigger.hostTechName})`;\n    } else if (this.panel.hostField || this.panel.hostTechNameField) {\n      return trigger.host || trigger.hostTechName;\n    } else {\n      return \"\";\n    }\n  }\n\n  getAlertStateIcon(trigger) {\n    const triggerValue = Number(trigger.value);\n    let iconClass = '';\n    if (triggerValue || trigger.color) {\n      if (trigger.priority >= 3) {\n        iconClass = 'icon-gf-critical';\n      } else {\n        iconClass = 'icon-gf-warning';\n      }\n    } else {\n      iconClass = 'icon-gf-online';\n    }\n\n    if (this.panel.triggerSeverity[trigger.priority].blink) {\n      iconClass += ' zabbix-trigger--blinked';\n    }\n    return iconClass;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let panel = ctrl.panel;\n    let pageCount = 0;\n    let triggerList = ctrl.triggerList;\n\n    scope.$watchGroup(['ctrl.currentTriggersPage', 'ctrl.triggerList'], renderPanel);\n    elem.on('click', '.triggers-panel-page-link', switchPage);\n    ctrl.events.on('render', (renderData) => {\n      triggerList = renderData || triggerList;\n      renderPanel();\n    });\n\n    function getContentHeight() {\n      let panelHeight = ctrl.height;\n      if (pageCount > 1) {\n        panelHeight -= 36;\n      }\n      return panelHeight + 'px';\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10)-1);\n\n      let pageSize = panel.pageSize || 10;\n      let startPos = ctrl.pageIndex * pageSize;\n      let endPos = Math.min(startPos + pageSize, triggerList.length);\n      ctrl.currentTriggersPage = triggerList.slice(startPos, endPos);\n\n      scope.$apply(() => {\n        renderPanel();\n      });\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 5;\n      pageCount = Math.ceil(triggerList.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i+1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function setFontSize() {\n      const fontSize = parseInt(panel.fontSize.slice(0, panel.fontSize.length - 1));\n      let triggerCardElem = elem.find('.card-item-wrapper');\n      if (fontSize && fontSize !== 100) {\n        triggerCardElem.find('.alert-list-icon').css({'font-size': fontSize + '%'});\n        triggerCardElem.find('.alert-list-title').css({'font-size': fontSize + '%'});\n        triggerCardElem.find('.alert-list-text').css({'font-size': fontSize * 0.7 + '%'});\n      } else {\n        // remove css\n        triggerCardElem.find('.alert-list-icon').css({'font-size': ''});\n        triggerCardElem.find('.alert-list-title').css({'font-size': ''});\n        triggerCardElem.find('.alert-list-text').css({'font-size': ''});\n      }\n    }\n\n    function renderPanel() {\n      let rootElem = elem.find('.triggers-panel-scroll');\n      let footerElem = elem.find('.triggers-panel-footer');\n      appendPaginationControls(footerElem);\n      rootElem.css({'max-height': getContentHeight()});\n      rootElem.css({'height': getContentHeight()});\n      setFontSize();\n      ctrl.renderingCompleted();\n    }\n\n    let unbindDestroy = scope.$on('$destroy', function() {\n      elem.off('click', '.triggers-panel-page-link');\n      unbindDestroy();\n    });\n  }\n}\n\nTriggerPanelCtrl.templateUrl = 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/module.html';\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, function(trigger) {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, function(trigger) {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n"]}