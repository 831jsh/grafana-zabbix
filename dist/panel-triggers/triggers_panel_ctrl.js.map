{"version":3,"sources":["../../src/panel-triggers/triggers_panel_ctrl.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","PanelCtrl","triggerPanelOptionsTab","triggerPanelTriggersTab","migratePanelSchema","ZABBIX_DS_ID","DEFAULT_TARGET","group","host","application","DEFAULT_SEVERITY","priority","severity","color","show","DEFAULT_TIME_FORMAT","PANEL_DEFAULTS","schemaVersion","datasources","targets","hostField","hostTechNameField","statusField","severityField","descriptionField","descriptionAtNewLine","hostsInMaintenance","showTriggers","sortTriggersBy","text","value","showEvents","limit","fontSize","pageSize","highlightNewEvents","highlightNewerThan","customLastChangeFormat","lastChangeFormat","triggerSeverity","okEventColor","ackEventColor","triggerStatusMap","TriggerPanelCtrl","$scope","$injector","$timeout","datasourceSrv","templateSrv","contextSrv","dashboardSrv","scope","editorTabIndex","defaultTimeFormat","pageIndex","triggerList","currentTriggersPage","panel","defaultsDeep","cloneDeep","available_datasources","map","getZabbixDataSources","length","push","isEmpty","initDatasources","events","on","onInitEditMode","bind","onRefresh","promises","ds","get","then","datasource","Promise","all","getMetricSources","meta","id","addEditorTab","timing","queryStart","Date","getTime","queryEnd","otherPanelInFullscreenMode","error","loading","setTimeQueryStart","getTriggers","setTimeQueryEnd","render","zabbixTriggers","catch","err","cancelled","console","log","message","data","emit","triggerListUnfiltered","formatTrigger","filterTriggersPost","sortTriggers","slice","getCurrentTriggersPage","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","getAcknowledges","setMaintenanceStatus","filterTriggersPre","addTriggerDataSource","flatten","results","eventids","lastEvent","eventid","each","event","find","acknowledges","timestamp","unix","ack","clock","time","format","user","alias","name","surname","maintenance","maintenance_status","some","hosts","orderBy","zabbixTrigger","triggerObj","hostTechName","comments","replace","lastchangeUnix","Number","lastchange","setTriggerLastChange","setTriggerSeverity","markAckEvents","age","fromNow","showComment","grafana_user","ack_message","zabbixAPI","acknowledgeEvent","reject","startPos","endPos","Math","min","triggerValue","iconClass","isNewTrigger","statusClass","highlightIntervalMs","parseInterval","durationSec","now","e","elem","attrs","ctrl","pageCount","$watchGroup","renderPanel","switchPage","renderData","getContentHeight","panelHeight","height","el","currentTarget","parseInt","$apply","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","setFontSize","triggerCardElem","css","rootElem","renderingCompleted","unbindDestroy","$on","off","templateUrl"],"mappings":"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","file":"triggers_panel_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport * as utils from '../datasource-zabbix/utils';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {triggerPanelOptionsTab} from './options_tab';\nimport {triggerPanelTriggersTab} from './triggers_tab';\nimport {migratePanelSchema} from './migrations';\n\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\n\nexport const DEFAULT_TARGET = {\n  group: {filter: \"\"},\n  host: {filter: \"\"},\n  application: {filter: \"\"},\n  trigger: {filter: \"\"}\n};\n\nexport const DEFAULT_SEVERITY = [\n  { priority: 0, severity: 'Not classified',  color: '#B7DBAB', show: true},\n  { priority: 1, severity: 'Information',     color: '#82B5D8', show: true},\n  { priority: 2, severity: 'Warning',         color: '#E5AC0E', show: true},\n  { priority: 3, severity: 'Average',         color: '#C15C17', show: true},\n  { priority: 4, severity: 'High',            color: '#BF1B00', show: true},\n  { priority: 5, severity: 'Disaster',        color: '#890F02', show: true},\n];\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nexport const PANEL_DEFAULTS = {\n  schemaVersion: 3,\n  datasources: [],\n  targets: {},\n  // Fields\n  hostField: true,\n  hostTechNameField: false,\n  statusField: true,\n  severityField: true,\n  descriptionField: true,\n  descriptionAtNewLine: false,\n  // Options\n  hostsInMaintenance: true,\n  showTriggers: 'all triggers',\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\n  showEvents: { text: 'Problems', value: '1' },\n  limit: 100,\n  // View options\n  fontSize: '100%',\n  pageSize: 10,\n  highlightNewEvents: true,\n  highlightNewerThan: '1h',\n  customLastChangeFormat: false,\n  lastChangeFormat: \"\",\n  // Triggers severity and colors\n  triggerSeverity: DEFAULT_SEVERITY,\n  okEventColor: 'rgba(0, 245, 153, 0.45)',\n  ackEventColor: 'rgba(0, 0, 0, 0)'\n};\n\nconst triggerStatusMap = {\n  '0': 'OK',\n  '1': 'PROBLEM'\n};\n\nexport class TriggerPanelCtrl extends PanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $timeout, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\n    super($scope, $injector);\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n    this.scope = $scope;\n    this.$timeout = $timeout;\n\n    this.editorTabIndex = 1;\n    this.triggerStatusMap = triggerStatusMap;\n    this.defaultTimeFormat = DEFAULT_TIME_FORMAT;\n    this.pageIndex = 0;\n    this.triggerList = [];\n    this.currentTriggersPage = [];\n    this.datasources = {};\n\n    this.panel = migratePanelSchema(this.panel);\n    _.defaultsDeep(this.panel, _.cloneDeep(PANEL_DEFAULTS));\n\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\n    if (this.panel.datasources.length === 0) {\n      this.panel.datasources.push(this.available_datasources[0]);\n    }\n    if (_.isEmpty(this.panel.targets)) {\n      this.panel.targets[this.panel.datasources[0]] = DEFAULT_TARGET;\n    }\n\n    this.initDatasources();\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  initDatasources() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      // Load datasource\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.datasources[ds] = datasource;\n        return datasource;\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getZabbixDataSources() {\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 1);\n    this.addEditorTab('Options', triggerPanelOptionsTab, 2);\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = new Date().getTime();\n  }\n\n  onRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n    this.setTimeQueryStart();\n    this.pageIndex = 0;\n\n    return this.getTriggers()\n    .then(zabbixTriggers => {\n      // Notify panel that request is finished\n      this.loading = false;\n      this.setTimeQueryEnd();\n\n      this.render(zabbixTriggers);\n    })\n    .catch(err => {\n      // if cancelled  keep loading set to true\n      if (err.cancelled) {\n        console.log('Panel request cancelled', err);\n        return;\n      }\n\n      this.loading = false;\n      this.error = err.message || \"Request Error\";\n\n      if (err.data) {\n        if (err.data.message) {\n          this.error = err.data.message;\n        }\n        if (err.data.error) {\n          this.error = err.data.error;\n        }\n      }\n\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  render(zabbixTriggers) {\n    let triggers = _.cloneDeep(zabbixTriggers || this.triggerListUnfiltered);\n    this.triggerListUnfiltered = _.cloneDeep(triggers);\n\n    triggers = _.map(triggers, this.formatTrigger.bind(this));\n    triggers = this.filterTriggersPost(triggers);\n    triggers = this.sortTriggers(triggers);\n\n    // Limit triggers number\n    triggers = triggers.slice(0, this.panel.limit || PANEL_DEFAULTS.limit);\n\n    this.triggerList = triggers;\n    this.getCurrentTriggersPage();\n\n    this.$timeout(() => {\n      super.render(this.triggerList);\n    });\n  }\n\n  getTriggers() {\n    let promises = _.map(this.panel.datasources, (ds) => {\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        var zabbix = datasource.zabbix;\n        var showEvents = this.panel.showEvents.value;\n        var triggerFilter = this.panel.targets[ds];\n\n        // Replace template variables\n        var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\n        var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\n        var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\n\n        let triggersOptions = {\n          showTriggers: showEvents\n        };\n\n        return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\n      }).then((triggers) => {\n        return this.getAcknowledges(triggers, ds);\n      }).then((triggers) => {\n        return this.setMaintenanceStatus(triggers);\n      }).then((triggers) => {\n        return this.filterTriggersPre(triggers, ds);\n      }).then((triggers) => {\n        return this.addTriggerDataSource(triggers, ds);\n      });\n    });\n\n    return Promise.all(promises)\n    .then(results => _.flatten(results));\n  }\n\n  getAcknowledges(triggerList, ds) {\n    // Request acknowledges for trigger\n    var eventids = _.map(triggerList, trigger => {\n      return trigger.lastEvent.eventid;\n    });\n\n    return this.datasources[ds].zabbix.getAcknowledges(eventids)\n    .then(events => {\n\n      // Map events to triggers\n      _.each(triggerList, trigger => {\n        var event = _.find(events, event => {\n          return event.eventid === trigger.lastEvent.eventid;\n        });\n\n        if (event) {\n          trigger.acknowledges = _.map(event.acknowledges, ack => {\n            let timestamp = moment.unix(ack.clock);\n            if (this.panel.customLastChangeFormat) {\n              ack.time = timestamp.format(this.panel.lastChangeFormat);\n            } else {\n              ack.time = timestamp.format(this.defaultTimeFormat);\n            }\n            ack.user = ack.alias + ' (' + ack.name + ' ' + ack.surname + ')';\n            return ack;\n          });\n        }\n\n        if (!trigger.lastEvent.eventid) {\n          trigger.lastEvent = null;\n        }\n      });\n\n      return triggerList;\n    });\n  }\n\n  filterTriggersPre(triggerList, ds) {\n    // Filter triggers by description\n    var triggerFilter = this.panel.targets[ds].trigger.filter;\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\n    if (triggerFilter) {\n      triggerList = filterTriggers(triggerList, triggerFilter);\n    }\n\n    return triggerList;\n  }\n\n  filterTriggersPost(triggers) {\n    let triggerList = _.cloneDeep(triggers);\n\n    // Filter acknowledged triggers\n    if (this.panel.showTriggers === 'unacknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return !trigger.acknowledges;\n      });\n    } else if (this.panel.showTriggers === 'acknowledged') {\n      triggerList = _.filter(triggerList, 'acknowledges');\n    } else {\n      triggerList = triggerList;\n    }\n\n    // Filter by maintenance status\n    if (!this.panel.hostsInMaintenance) {\n      triggerList = _.filter(triggerList, (trigger) => trigger.maintenance === false);\n    }\n\n    // Filter triggers by severity\n    triggerList = _.filter(triggerList, trigger => {\n      return this.panel.triggerSeverity[trigger.priority].show;\n    });\n\n    return triggerList;\n  }\n\n  setMaintenanceStatus(triggers) {\n    _.each(triggers, (trigger) => {\n      let maintenance_status = _.some(trigger.hosts, (host) => host.maintenance_status === '1');\n      trigger.maintenance = maintenance_status;\n    });\n    return triggers;\n  }\n\n  addTriggerDataSource(triggers, ds) {\n    _.each(triggers, (trigger) => {\n      trigger.datasource = ds;\n    });\n    return triggers;\n  }\n\n  sortTriggers(triggerList) {\n    if (this.panel.sortTriggersBy.value === 'priority') {\n      triggerList = _.orderBy(triggerList, ['priority', 'lastchangeUnix', 'triggerid'], ['desc', 'desc', 'desc']);\n    } else {\n      triggerList = _.orderBy(triggerList, ['lastchangeUnix', 'priority', 'triggerid'], ['desc', 'desc', 'desc']);\n    }\n    return triggerList;\n  }\n\n  formatTrigger(zabbixTrigger) {\n    let trigger = _.cloneDeep(zabbixTrigger);\n    let triggerObj = trigger;\n\n    // Set host that the trigger belongs\n    if (trigger.hosts && trigger.hosts.length) {\n      triggerObj.host = trigger.hosts[0].name;\n      triggerObj.hostTechName = trigger.hosts[0].host;\n    }\n\n    // Handle multi-line description\n    if (trigger.comments) {\n      trigger.comments = trigger.comments.replace('\\n', '<br>');\n    }\n\n    // Format last change and age\n    trigger.lastchangeUnix = Number(trigger.lastchange);\n    triggerObj = this.setTriggerLastChange(triggerObj);\n    triggerObj = this.setTriggerSeverity(triggerObj);\n    return triggerObj;\n  }\n\n  updateTriggerFormat(trigger) {\n    trigger = this.setTriggerLastChange(trigger);\n    trigger = this.setTriggerSeverity(trigger);\n    return trigger;\n  }\n\n  setTriggerSeverity(trigger) {\n    if (trigger.value === '1') {\n      // Problem state\n      trigger.color = this.panel.triggerSeverity[trigger.priority].color;\n    } else {\n      // OK state\n      trigger.color = this.panel.okEventColor;\n    }\n    trigger.severity = this.panel.triggerSeverity[trigger.priority].severity;\n\n    // Mark acknowledged triggers with different color\n    if (this.panel.markAckEvents && trigger.acknowledges && trigger.acknowledges.length) {\n      trigger.color = this.panel.ackEventColor;\n    }\n\n    return trigger;\n  }\n\n  setTriggerLastChange(trigger) {\n    if (!trigger.lastchangeUnix) {\n      trigger.lastchange = \"\";\n      trigger.age = \"\";\n      return trigger;\n    }\n\n    let timestamp = moment.unix(trigger.lastchangeUnix);\n    if (this.panel.customLastChangeFormat) {\n      // User defined format\n      trigger.lastchange = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      trigger.lastchange = timestamp.format(this.defaultTimeFormat);\n    }\n    trigger.age = timestamp.fromNow(true);\n    return trigger;\n  }\n\n  switchComment(trigger) {\n    trigger.showComment = !trigger.showComment;\n  }\n\n  acknowledgeTrigger(trigger, message) {\n    let eventid = trigger.lastEvent ? trigger.lastEvent.eventid : null;\n    let grafana_user = this.contextSrv.user.name;\n    let ack_message = grafana_user + ' (Grafana): ' + message;\n    return this.datasourceSrv.get(trigger.datasource)\n    .then(datasource => {\n      if (eventid) {\n        return datasource.zabbix.zabbixAPI.acknowledgeEvent(eventid, ack_message);\n      } else {\n        return Promise.reject({message: 'Trigger has no events. Nothing to acknowledge.'});\n      }\n    })\n    .then(this.onRefresh.bind(this))\n    .catch((err) => {\n      this.error = err.message || \"Acknowledge Error\";\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  getCurrentTriggersPage() {\n    let pageSize = this.panel.pageSize || PANEL_DEFAULTS.pageSize;\n    let startPos = this.pageIndex * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\n    return this.currentTriggersPage;\n  }\n\n  formatHostName(trigger) {\n    if (this.panel.hostField && this.panel.hostTechNameField) {\n      return `${trigger.host} (${trigger.hostTechName})`;\n    } else if (this.panel.hostField || this.panel.hostTechNameField) {\n      return trigger.host || trigger.hostTechName;\n    } else {\n      return \"\";\n    }\n  }\n\n  getAlertIconClass(trigger) {\n    const triggerValue = Number(trigger.value);\n    let iconClass = '';\n    if (triggerValue || trigger.color) {\n      if (trigger.priority >= 3) {\n        iconClass = 'icon-gf-critical';\n      } else {\n        iconClass = 'icon-gf-warning';\n      }\n    } else {\n      iconClass = 'icon-gf-online';\n    }\n\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\n      iconClass += ' zabbix-trigger--blinked';\n    }\n    return iconClass;\n  }\n\n  getAlertStateClass(trigger) {\n    let statusClass = '';\n\n    if (trigger.value === '1') {\n      statusClass = 'alert-state-critical';\n    } else {\n      statusClass = 'alert-state-ok';\n    }\n\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\n      statusClass += ' zabbix-trigger--blinked';\n    }\n\n    return statusClass;\n  }\n\n  isNewTrigger(trigger) {\n    try {\n      const highlightIntervalMs = utils.parseInterval(this.panel.highlightNewerThan || PANEL_DEFAULTS.highlightNewerThan);\n      const durationSec = (Date.now() - trigger.lastchangeUnix * 1000);\n      return durationSec < highlightIntervalMs;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let panel = ctrl.panel;\n    let pageCount = 0;\n    let triggerList = ctrl.triggerList;\n\n    scope.$watchGroup(['ctrl.currentTriggersPage', 'ctrl.triggerList'], renderPanel);\n    elem.on('click', '.triggers-panel-page-link', switchPage);\n    ctrl.events.on('render', (renderData) => {\n      triggerList = renderData || triggerList;\n      renderPanel();\n    });\n\n    function getContentHeight() {\n      let panelHeight = ctrl.height;\n      if (pageCount > 1) {\n        panelHeight -= 36;\n      }\n      return panelHeight + 'px';\n    }\n\n    function switchPage(e) {\n      let el = $(e.currentTarget);\n      ctrl.pageIndex = (parseInt(el.text(), 10)-1);\n\n      let pageSize = panel.pageSize || 10;\n      let startPos = ctrl.pageIndex * pageSize;\n      let endPos = Math.min(startPos + pageSize, triggerList.length);\n      ctrl.currentTriggersPage = triggerList.slice(startPos, endPos);\n\n      scope.$apply(() => {\n        renderPanel();\n      });\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      let pageSize = panel.pageSize || 5;\n      pageCount = Math.ceil(triggerList.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\n      let endPage = Math.min(pageCount, startPage + 9);\n\n      let paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n        let pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i+1) + '</a></li>');\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function setFontSize() {\n      const fontSize = parseInt(panel.fontSize.slice(0, panel.fontSize.length - 1));\n      let triggerCardElem = elem.find('.card-item-wrapper');\n      if (fontSize && fontSize !== 100) {\n        triggerCardElem.find('.alert-list-icon').css({'font-size': fontSize + '%'});\n        triggerCardElem.find('.alert-list-title').css({'font-size': fontSize + '%'});\n        triggerCardElem.find('.alert-list-text').css({'font-size': fontSize * 0.8 + '%'});\n      } else {\n        // remove css\n        triggerCardElem.find('.alert-list-icon').css({'font-size': ''});\n        triggerCardElem.find('.alert-list-title').css({'font-size': ''});\n        triggerCardElem.find('.alert-list-text').css({'font-size': ''});\n      }\n    }\n\n    function renderPanel() {\n      let rootElem = elem.find('.triggers-panel-scroll');\n      let footerElem = elem.find('.triggers-panel-footer');\n      appendPaginationControls(footerElem);\n      rootElem.css({'max-height': getContentHeight()});\n      rootElem.css({'height': getContentHeight()});\n      setFontSize();\n      ctrl.renderingCompleted();\n    }\n\n    let unbindDestroy = scope.$on('$destroy', function() {\n      elem.off('click', '.triggers-panel-page-link');\n      unbindDestroy();\n    });\n  }\n}\n\nTriggerPanelCtrl.templateUrl = 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/module.html';\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, function(trigger) {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, function(trigger) {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n"]}