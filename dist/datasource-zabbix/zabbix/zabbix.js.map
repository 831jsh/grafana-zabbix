{"version":3,"sources":["../../../src/datasource-zabbix/zabbix/zabbix.js"],"names":["findByName","list","name","finded","_","find","filterByName","filter","filterByRegex","regex","filterPattern","utils","buildRegex","zbx_obj","test","findByFilter","isRegex","filterByQuery","getHostIds","items","hostIds","map","item","hosts","uniq","flatten","ZabbixAPIConnector","ZabbixDBConnector","CachingProxy","REQUESTS_TO_PROXYFY","REQUESTS_TO_CACHE","REQUESTS_TO_BIND","Zabbix","url","options","backendSrv","datasourceSrv","username","password","basicAuth","withCredentials","cacheTTL","enableDirectDBConnection","sqlDatasourceId","cacheOptions","enabled","ttl","cachingProxy","zabbixAPI","dbConnector","getHistoryDB","proxyfyWithCache","getHistory","getTrendsDB","getTrends","proxyfyRequests","cacheRequests","bindRequests","request","proxyfy","cacheRequest","bind","target","parts","filters","p","getItems","Promise","all","getHosts","getApps","then","results","apps","appFilterEmpty","getGroups","groupFilter","getAllGroups","groups","groupids","hostFilter","getAllHosts","hostids","appFilter","undefined","itemtype","appids","showDisabledItems","expandUserMacro","getMacros","forEach","containsMacro","replaceMacro","macros","itemFilter","getAllItems","itServiceFilter","getITService","itServices","promises","filteredGroups","filteredHosts","filteredApps","query","applicationids","getTriggers"],"mappings":"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","file":"zabbix.js","sourcesContent":["import _ from 'lodash';\nimport * as utils from '../utils';\nimport { ZabbixAPIConnector } from './connectors/zabbix_api/zabbixAPIConnector';\nimport { ZabbixDBConnector } from './connectors/sql/zabbixDBConnector';\nimport { CachingProxy } from './proxy/cachingProxy';\n\nconst REQUESTS_TO_PROXYFY = [\n  'getHistory', 'getTrend', 'getGroups', 'getHosts', 'getApps', 'getItems', 'getMacros', 'getItemsByIDs',\n  'getEvents', 'getAlerts', 'getHostAlerts', 'getAcknowledges', 'getITService', 'getSLA', 'getVersion'\n];\n\nconst REQUESTS_TO_CACHE = [\n  'getGroups', 'getHosts', 'getApps', 'getItems', 'getMacros', 'getItemsByIDs', 'getITService'\n];\n\nconst REQUESTS_TO_BIND = [\n  'getHistory', 'getTrend', 'getMacros', 'getItemsByIDs', 'getEvents', 'getAlerts', 'getHostAlerts',\n  'getAcknowledges', 'getITService', 'getSLA', 'getVersion', 'login'\n];\n\nexport class Zabbix {\n\n  /** @ngInject */\n  constructor(url, options, backendSrv, datasourceSrv) {\n    let {\n      username,\n      password,\n      basicAuth,\n      withCredentials,\n      cacheTTL,\n      enableDirectDBConnection,\n      sqlDatasourceId\n    } = options;\n\n    // Initialize caching proxy for requests\n    let cacheOptions = {\n      enabled: true,\n      ttl: cacheTTL\n    };\n    this.cachingProxy = new CachingProxy(cacheOptions);\n\n    this.zabbixAPI = new ZabbixAPIConnector(url, username, password, basicAuth, withCredentials, backendSrv);\n\n    if (enableDirectDBConnection) {\n      this.dbConnector = new ZabbixDBConnector(sqlDatasourceId, {}, backendSrv, datasourceSrv);\n      this.getHistoryDB = this.cachingProxy.proxyfyWithCache(this.dbConnector.getHistory, 'getHistory', this.dbConnector);\n      this.getTrendsDB = this.cachingProxy.proxyfyWithCache(this.dbConnector.getTrends, 'getTrends', this.dbConnector);\n    }\n\n    this.proxyfyRequests();\n    this.cacheRequests();\n    this.bindRequests();\n  }\n\n  proxyfyRequests() {\n    for (let request of REQUESTS_TO_PROXYFY) {\n      this.zabbixAPI[request] = this.cachingProxy.proxyfy(this.zabbixAPI[request], request, this.zabbixAPI);\n    }\n  }\n\n  cacheRequests() {\n    for (let request of REQUESTS_TO_CACHE) {\n      this.zabbixAPI[request] = this.cachingProxy.cacheRequest(this.zabbixAPI[request], request, this.zabbixAPI);\n    }\n  }\n\n  bindRequests() {\n    for (let request of REQUESTS_TO_BIND) {\n      this[request] = this.zabbixAPI[request].bind(this.zabbixAPI);\n    }\n  }\n\n  getItemsFromTarget(target, options) {\n    let parts = ['group', 'host', 'application', 'item'];\n    let filters = _.map(parts, p => target[p].filter);\n    return this.getItems(...filters, options);\n  }\n\n  getHostsFromTarget(target) {\n    let parts = ['group', 'host', 'application'];\n    let filters = _.map(parts, p => target[p].filter);\n    return Promise.all([\n      this.getHosts(...filters),\n      this.getApps(...filters),\n    ]).then((results) => {\n      let [hosts, apps] = results;\n      if (apps.appFilterEmpty) {\n        apps = [];\n      }\n      return [hosts, apps];\n    });\n  }\n\n  getAllGroups() {\n    return this.zabbixAPI.getGroups();\n  }\n\n  getGroups(groupFilter) {\n    return this.getAllGroups()\n    .then(groups => findByFilter(groups, groupFilter));\n  }\n\n  /**\n   * Get list of host belonging to given groups.\n   */\n  getAllHosts(groupFilter) {\n    return this.getGroups(groupFilter)\n    .then(groups => {\n      let groupids = _.map(groups, 'groupid');\n      return this.zabbixAPI.getHosts(groupids);\n    });\n  }\n\n  getHosts(groupFilter, hostFilter) {\n    return this.getAllHosts(groupFilter)\n    .then(hosts => findByFilter(hosts, hostFilter));\n  }\n\n  /**\n   * Get list of applications belonging to given groups and hosts.\n   */\n  getAllApps(groupFilter, hostFilter) {\n    return this.getHosts(groupFilter, hostFilter)\n    .then(hosts => {\n      let hostids = _.map(hosts, 'hostid');\n      return this.zabbixAPI.getApps(hostids);\n    });\n  }\n\n  getApps(groupFilter, hostFilter, appFilter) {\n    return this.getHosts(groupFilter, hostFilter)\n    .then(hosts => {\n      let hostids = _.map(hosts, 'hostid');\n      if (appFilter) {\n        return this.zabbixAPI.getApps(hostids)\n        .then(apps => filterByQuery(apps, appFilter));\n      } else {\n        return {\n          appFilterEmpty: true,\n          hostids: hostids\n        };\n      }\n    });\n  }\n\n  getAllItems(groupFilter, hostFilter, appFilter, options = {}) {\n    return this.getApps(groupFilter, hostFilter, appFilter)\n    .then(apps => {\n      if (apps.appFilterEmpty) {\n        return this.zabbixAPI.getItems(apps.hostids, undefined, options.itemtype);\n      } else {\n        let appids = _.map(apps, 'applicationid');\n        return this.zabbixAPI.getItems(undefined, appids, options.itemtype);\n      }\n    })\n    .then(items => {\n      if (!options.showDisabledItems) {\n        items = _.filter(items, {'status': '0'});\n      }\n\n      return items;\n    })\n    .then(this.expandUserMacro.bind(this));\n  }\n\n  expandUserMacro(items) {\n    let hostids = getHostIds(items);\n    return this.getMacros(hostids)\n    .then(macros => {\n      _.forEach(items, item => {\n        if (utils.containsMacro(item.name)) {\n          item.name = utils.replaceMacro(item, macros);\n        }\n      });\n      return items;\n    });\n  }\n\n  getItems(groupFilter, hostFilter, appFilter, itemFilter, options = {}) {\n    return this.getAllItems(groupFilter, hostFilter, appFilter, options)\n    .then(items => filterByQuery(items, itemFilter));\n  }\n\n  getITServices(itServiceFilter) {\n    return this.zabbixAPI.getITService()\n    .then(itServices => findByFilter(itServices, itServiceFilter));\n  }\n\n  /**\n   * Build query - convert target filters to array of Zabbix items\n   */\n  getTriggers(groupFilter, hostFilter, appFilter, options) {\n    let promises = [\n      this.getGroups(groupFilter),\n      this.getHosts(groupFilter, hostFilter),\n      this.getApps(groupFilter, hostFilter, appFilter)\n    ];\n\n    return Promise.all(promises)\n    .then(results => {\n      let filteredGroups = results[0];\n      let filteredHosts = results[1];\n      let filteredApps = results[2];\n      let query = {};\n\n      if (appFilter) {\n        query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n      }\n      if (hostFilter) {\n        query.hostids = _.map(filteredHosts, 'hostid');\n      }\n      if (groupFilter) {\n        query.groupids = _.map(filteredGroups, 'groupid');\n      }\n\n      return query;\n    }).then(query => {\n      return this.zabbixAPI.getTriggers(query.groupids, query.hostids, query.applicationids, options);\n    });\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Find group, host, app or item by given name.\n * @param  list list of groups, apps or other\n * @param  name visible name\n * @return      array with finded element or empty array\n */\nfunction findByName(list, name) {\n  var finded = _.find(list, {'name': name});\n  if (finded) {\n    return [finded];\n  } else {\n    return [];\n  }\n}\n\n/**\n * Different hosts can contains applications and items with same name.\n * For this reason use _.filter, which return all elements instead _.find,\n * which return only first finded.\n * @param  {[type]} list list of elements\n * @param  {[type]} name app name\n * @return {[type]}      array with finded element or empty array\n */\nfunction filterByName(list, name) {\n  var finded = _.filter(list, {'name': name});\n  if (finded) {\n    return finded;\n  } else {\n    return [];\n  }\n}\n\nfunction filterByRegex(list, regex) {\n  var filterPattern = utils.buildRegex(regex);\n  return _.filter(list, function (zbx_obj) {\n    return filterPattern.test(zbx_obj.name);\n  });\n}\n\nfunction findByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return findByName(list, filter);\n  }\n}\n\nfunction filterByQuery(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return filterByName(list, filter);\n  }\n}\n\nfunction getHostIds(items) {\n  let hostIds = _.map(items, item => {\n    return _.map(item.hosts, 'hostid');\n  });\n  return _.uniq(_.flatten(hostIds));\n}\n"]}